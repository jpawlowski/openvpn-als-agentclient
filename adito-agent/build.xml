<?xml version="1.0" encoding="UTF-8"?>
<project name="adito-agent" default="build" basedir=".">

	<property file="build.properties"/>
	<property file="${user.home}/.3sp.build.properties"/> 

	<property name="build.dir" value="build" />
	<property name="build.extension.output" value="${build.dir}/classes"/>
	<property name="build.tmp" value="${build.dir}/tmp"/>
	<property name="build.dist" value="${build.dir}/dist"/>
	<property name="build.docs" value="${build.dir}/docs"/>
	<property name="build.extension" value="${build.dir}/extension" />
	<property name="build.release" value="${build.dir}/release" />

        <!-- Agent build fails if Microsoft Java (Java 1) is enabled. -->
        <!-- Disabled in Adito 0.9.0. --> 
	<!-- Global java1 properties 
        <property name="java1.home" value="jdk118_v3" />
        <property name="java1.compiler" value="${java1.home}/../bin/javac" />
        <property name="java1.compiler.ms" value="jvc" />
	-->
	<!-- Agent specific properties 
	   
	   Some of these properties only come into play when you wish to 
	   build on a  Windows platform for MS JVM clients (Java 1) . -->
	<property name="agent.build.target" value="1.1"/>
	<property name="agent.build.source" value="1.2"/>
	<property name="agent.build.debug" value="true"/>
        
        <!-- Agent build fails if Microsoft Java (Java 1) is enabled. -->
        <!-- Disabled in Adito 0.9.0. --> 
	<property name="agent.build.java1" value="false"/>
	<property name="agent.build.java1.windows.compiler" value="${java1.compiler.ms}"/>
	<property name="agent.build.java1.other.compiler" value="${java1.compiler}"/>


	<!-- Dependencies -->
		
	<property name="maverick-ssl.home" value="../maverick-ssl"/>
	<property name="maverick-crypto.home" value="../maverick-crypto"/>
	<property name="maverick-util.home" value="../maverick-util"/>
	<property name="maverick-multiplex.home" value="../maverick-multiplex"/>
	<property name="ui.home" value="../ui"/>
	<property name="build-tools.home" value="../build-tools"/>
	<property name="commons-logging-java1.home" value="../commons-logging-java1"/>
	<property name="certificate.home" value="../certificate"/>
	<property name="private-build-tools.home" value="${basedir}/../private-build-tools"/>
	<property name="adito-agent-swt.home" value="../adito-agent-swt"/>
	<property name="adito-agent-awt.home" value="../adito-agent-awt"/>
	<property file="${certificate.home}/certificate.properties"/>

	<!-- Use so the build can be sucessful without using the MS JVM -->
	<property name="antcontrib.lib" value="${build-tools.home}/ant/ant-contrib.jar"/>

	<!-- Unit test properties -->
	<property name="adito.home" value="../adito"/>
	<property name="build.test.output" value="${build.dir}/test" />
	<property name="build.test" value="test" />
	<property name="build.reports" value="${build.dir}/reports"/>


<!-- Work in progress. We wan't Javadocs from the Agent also -->
<!--
	<target name="javadoc" description="Create API documentation">
                <mkdir dir="${build.docs}/api"/>
                <javadoc sourcepath="src" defaultexcludes="yes" destdir="${build.docs}/api" author="true" version="true" use="true" windowtitle="${ant.project.name}" notree="true">
                        <doctitle>
                                <![CDATA[<h1>Adito Agent</h1>
                                <br>
                                <p>This extension adds Adito Agent to Adito server. Large part of
				Adito's advanced functionality depends on Adito Agent.</p>]]>
                        </doctitle>
                        <bottom>
                                <![CDATA[<i>Copyright &#169; 2003-2007 3SP LTD. All Rights Reserved.</i>]]>
                        </bottom>
                        <packageset dir="client" defaultexcludes="yes">
                                <include name="com/adito/**"/>
                        </packageset>
                        <packageset dir="common" defaultexcludes="yes">
                                <include name="com/adito/**"/>
                        </packageset>
                </javadoc>
        </target>

-->
		
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${antcontrib.lib}" />
		</classpath>
	</taskdef>

	<path id="adito-agent.classpath">
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${maverick-multiplex.home}/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${maverick-ssl.home}/build/dist">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<target name="setup-client">

		<delete>
			<fileset dir="${build.tmp}"/>
			<fileset dir="${build.extension.output}"/>
		</delete>

		<copy todir="${build.tmp}">
			<fileset dir="${maverick-crypto.home}/src"/>
			<fileset dir="${maverick-util.home}/src"/>
			<fileset dir="${maverick-multiplex.home}/src"/>
			<fileset dir="${ui.home}/src">
				<include name="com/sshtools/**/*.java"/>
				<include name="com/sshtools/**/*.properties"/>
				<exclude name="com/sshtools/ui/swing/**/*"/>
			</fileset>
			<!--fileset dir="${adito-agent-swt.home}/src"/-->
			<fileset dir="${adito-agent-awt.home}/src"/>
			<fileset dir="./common"/>
			<fileset dir="./client"/>
			<!--
			<fileset dir="./jdk6"/>
			-->
		</copy>
		<!--<echo>Switch code to Java 1</echo>
		<java classname="codeswitcher.CodeSwitcher" fork="true">
			<arg value="${build.tmp}"/>
			<arg value="+JAVA1"/>
			<classpath>
				<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
			</classpath>
		</java>-->

		<copy todir="${build.extension.output}">
			<fileset dir="./client">
				<include name="**/*.gif"/>
				<include name="**/*.png"/>
				<include name="**/*.properties"/>
				<include name="**/*.ico"/>
			</fileset>
			<fileset dir="./common">
				<include name="**/*.properties"/>
			</fileset>
			<fileset dir="${ui.home}/src">
				<include name="**/*.properties"/>
				<exclude name="com/sshtools/ui/swing/**/*.properties"/>
			</fileset>
			<!--fileset dir="${adito-agent-swt.home}/src">
				<include name="**/*.properties"/>
			</fileset-->
			<fileset dir="${adito-agent-awt.home}/src">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
		
		<xmlproperty file="extensions/adito-agent/extension.xml"/>
		<replace file="${build.tmp}/com/adito/agent/client/Agent.java" 
				token="999.999.999" value="${bundle(version)}"/>
		
	</target>

	<target name="setup-launcher">
<!--
		<delete>
			<fileset dir="${build.tmp}"/>
			<fileset dir="${build.extension.output}"/>
		</delete>

		<copy todir="${build.tmp}">
			<fileset dir="./common"/>
			<fileset dir="./launcher"/>
			<fileset dir="${ui.home}/src">
				<include name="com/sshtools/ui/awt/UIUtil.java"/>
				<include name="com/sshtools/ui/awt/ImageCanvas.java"/>
				<include name="com/sshtools/ui/awt/Messages.java"/>
				<include name="com/sshtools/ui/awt/MultilineLabel.java"/>
				<include name="com/sshtools/ui/awt/options/Messages.java"/>
				<include name="com/sshtools/ui/awt/options/OptionDialog.java"/>
				<include name="com/sshtools/ui/awt/options/Option.java"/>
				<include name="com/sshtools/ui/awt/options/OptionCallback.java"/>
				<include name="com/sshtools/ui/awt/ApplicationResources.properties"/>
				<include name="com/sshtools/ui/awt/options/ApplicationResources.properties"/>
			</fileset>
		</copy>
		
		<java classname="codeswitcher.CodeSwitcher" fork="true">
			<arg value="${build.tmp}"/>
			<arg value="+JAVA1"/>
			<classpath>
				<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
			</classpath>
		</java>

		<copy todir="${build.extension.output}">
			<fileset dir="./launcher">
				<include name="**/*.gif"/>
				<include name="**/*.properties"/>
			</fileset>
			<fileset dir="./common">
				<include name="**/*.properties"/>
			</fileset>
			<fileset dir="${ui.home}/src">
				<include name="com/sshtools/ui/awt/ApplicationResources.properties"/>
				<include name="com/sshtools/ui/awt/options/ApplicationResources.properties"/>
			</fileset>
		</copy>
-->
	</target>


	<target name="build" depends="">

		<mkdir dir="${build.dist}"/>
		
		<ant dir="${maverick-ssl.home}"/>
		
		<echo message="Building with java ${java.version}"/>

		<!-- Build the RELEASE version of the client -->
		<antcall target="setup-client"/>

		<!-- Need to do both for the moment until -->
		<replace dir="${build.tmp}"
                 token="/* DEBUG */"
                 value="// DEBUG  ">
			<include name="**/*.java"/>
		</replace>

		<if>
			<equals arg1="${agent.build.java1}" arg2="true"/>
			<then>
				<if>
					<os family="windows"/>
					<then>
						<java classname="codeswitcher.CodeSwitcher" fork="true">
							<arg value="${build.tmp}"/>
							<arg value="-DEBUG"/>
							<arg value="+MSJAVA"/>
							<arg value="+JAVA1"/>
							<arg value="-JAVA2"/>
							<arg value="-NETSCAPE"/>
							<arg value="#STRIP"/>
							<classpath>
								<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
							</classpath>
						</java>
						<javac debug="${agent.build.debug}" source="${agent.build.source}" 
							target="${agent.build.target}" destdir="${build.extension.output}" 
							srcdir="${build.tmp}" includes="**/*.java"
							excludes="**/swt/**/*.java"
							compiler="${agent.build.java1.windows.compiler}">
							<classpath refid="adito-agent.classpath"/>
						</javac>
					</then>
					<else>
						<java classname="codeswitcher.CodeSwitcher" fork="true">
							<arg value="${build.tmp}"/>
							<arg value="-DEBUG"/>
							<arg value="-MSJAVA"/>
							<arg value="+JAVA1"/>
							<arg value="-JAVA2"/>
							<arg value="-NETSCAPE"/>
							<arg value="#STRIP"/>
							<classpath>
								<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
							</classpath>
						</java>
						<javac debug="${agent.build.debug}" source="${agent.build.source}" 
							target="${agent.build.target}" destdir="${build.extension.output}" 
							srcdir="${build.tmp}" includes="**/*.java"
							excludes="**/swt/**/*.java"
							compiler="${agent.build.java1.other.compiler}">
							<classpath refid="adito-agent.classpath"/>
						</javac>
					</else>
				</if>
			</then>
			<else>
				<java classname="codeswitcher.CodeSwitcher" fork="true">
					<arg value="${build.tmp}"/>
					<arg value="-DEBUG"/>
					<arg value="-MSJAVA"/>
					<arg value="-JAVA1"/>
					<arg value="+JAVA2"/>
					<arg value="-NETSCAPE"/>
					<arg value="#STRIP"/>
					<classpath>
						<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
					</classpath>
				</java>
				<javac debug="${agent.build.debug}" source="${agent.build.source}" 
					target="${agent.build.target}" destdir="${build.extension.output}" 
					excludes="**/swt/**/*.java"
					srcdir="${build.tmp}" includes="**/*.java">
					<classpath refid="adito-agent.classpath"/>
				</javac>
			</else>
		</if>			

		<jar jarfile="${build.dist}/agent.jar" basedir="${build.extension.output}">
			<include name="com/maverick/multiplex/**/*.class"/>
			<include name="com/adito/agent/client/**/*.class"/>
			<exclude name="com/adito/agent/client/gui/awt/**/*"/>
		</jar>					

		<jar jarfile="${build.dist}/agent-awt.jar">
			<fileset dir="${build.extension.output}"> 
				<include name="com/maverick/multiplex/**/*.class"/>
				<include name="com/adito/agent/client/gui/awt/**/*.class"/>
			</fileset>
			<fileset dir="${adito-agent-awt.home}/src">
				<include name="images/**/*.gif" />
			</fileset>
		</jar>		

		<jar jarfile="${build.dist}/agent-awt-en.jar" basedir="${build.extension.output}">
			<include name="com/adito/agent/client/gui/awt/**/*.properties"/>
		</jar>
		
		<jar jarfile="${build.dist}/agent-en.jar" basedir="${build.extension.output}">
			<include name="**/*.properties" />
		</jar>

		<jar jarfile="${build.dist}/maverick-crypto.jar" basedir="${build.extension.output}">
			<include name="com/maverick/crypto/**/*.class"/>
		</jar>

		<jar jarfile="${build.dist}/maverick-util.jar" basedir="${build.extension.output}">
			<include name="com/maverick/util/**/*.class"/>
		</jar>

		<jar jarfile="${build.dist}/ui.jar" basedir="${build.extension.output}">
			<include name="com/sshtools/ui/**/*.class"/>
			<include name="com/sshtools/ui/**/*.properties"/>
			<include name="com/sshtools/util/**/*.class"/>
		</jar>
		
		<copy todir="${build.dist}">
			<fileset dir="${maverick-ssl.home}/build/dist">
			   <include name="*.jar"/>
			</fileset>
		</copy>
		
	

		<!-- Build the JAR version of the launcher 
		<antcall target="setup-launcher"/>-->

		<if>
			<equals arg1="${agent.build.java1}" arg2="true"/>
			<then>
				<if>
					<os family="windows"/>
					<then>
						<java classname="codeswitcher.CodeSwitcher" fork="true">
							<arg value="${build.tmp}"/>
							<arg value="+DEBUG"/>
							<arg value="+MSJAVA"/>
							<arg value="+JAVA1"/>
							<arg value="-JAVA2"/>
							<arg value="-NETSCAPE"/>
							<arg value="#STRIP"/>
							<classpath>
								<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
							</classpath>
						</java>
						<javac debug="${agent.build.debug}" source="${agent.build.source}" 
							target="${agent.build.target}" destdir="${build.extension.output}" 
							srcdir="${build.tmp}" includes="**/*.java"
							compiler="${agent.build.java1.windows.compiler}">
							<classpath refid="adito-agent.classpath"/>
						</javac>
					</then>
					<else>
						<java classname="codeswitcher.CodeSwitcher" fork="true">
							<arg value="${build.tmp}"/>
							<arg value="+DEBUG"/>
							<arg value="-MSJAVA"/>
							<arg value="+JAVA1"/>
							<arg value="-JAVA2"/>
							<arg value="-NETSCAPE"/>
							<arg value="#STRIP"/>
							<classpath>
								<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
							</classpath>
						</java>
						<javac debug="${agent.build.debug}" source="${agent.build.source}" 
							target="${agent.build.target}" destdir="${build.extension.output}" 
							srcdir="${build.tmp}" includes="**/*.java"
							compiler="${agent.build.java1.other.compiler}">
							<classpath refid="adito-agent.classpath"/>
						</javac>
					</else>
				</if>
			</then>
			<else>
				<java classname="codeswitcher.CodeSwitcher" fork="true">
					<arg value="${build.tmp}"/>
					<arg value="+DEBUG"/>
					<arg value="-MSJAVA"/>
					<arg value="-JAVA1"/>
					<arg value="+JAVA2"/>
					<arg value="-NETSCAPE"/>
					<arg value="#STRIP"/>
					<classpath>
						<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
					</classpath>
				</java>
				<javac debug="${agent.build.debug}" source="${agent.build.source}" 
					target="${agent.build.target}" destdir="${build.extension.output}" 
					srcdir="${build.tmp}" includes="**/*.java">
					<classpath refid="adito-agent.classpath"/>
				</javac>
			</else>
		</if>	

		<!--<jar jarfile="${build.dist}/launcher.jar" basedir="${build.extension.output}">
			<include name="com/adito/agent/client/launcher/*.class"/>
			<include name="com/adito/agent/client/util/**/*.class"/>
			<include name="com/sshtools/ui/awt/UIUtil.class"/>
			<include name="com/sshtools/ui/awt/Messages.class"/>
			<include name="com/sshtools/ui/awt/ImageCanvas.class"/>
			<include name="com/sshtools/ui/awt/MultilineLabel.class"/>
			<include name="com/sshtools/ui/awt/options/Messages.class"/>
			<include name="com/sshtools/ui/awt/options/OptionDialog*.class"/>
			<include name="com/sshtools/ui/awt/options/Option.class"/>
			<include name="com/sshtools/ui/awt/options/OptionCallback.class"/>
			<include name="images/**/launcher-*.gif" />
		</jar>

		<jar jarfile="${build.dist}/launcher-en.jar" basedir="${build.extension.output}">
			<include name="**/*.properties" />
		</jar>

		<signjar jar="${build.dist}/launcher.jar"
                 alias="${certificate.alias}"
                 keystore="${certificate.home}/${certificate.keystore}"
                 storetype="${certificate.storetype}"
                 storepass="${certificate.password}"/>

		<signjar jar="${build.dist}/launcher-en.jar"
                 alias="${certificate.alias}"
                 keystore="${certificate.home}/${certificate.keystore}"
                 storetype="${certificate.storetype}"
                 storepass="${certificate.password}"/>
-->
		<!-- Now build the CAB version of the launcher -->

		<!-- Build the DEBUG version of the client 
		
		<antcall target="setup-client"/>	-->

		<java classname="codeswitcher.CodeSwitcher" fork="true">
			<arg value="${build.tmp}"/>
			<arg value="-MSJAVA"/>
			<arg value="-NETSCAPE"/>
			<arg value="+DEBUG"/>
			<arg value="#STRIP"/>
			<classpath>
				<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
			</classpath>
		</java>

		<javac excludes="**/swt/**/*.java" debug="true" source="${agent.build.source}" target="${agent.build.target}" destdir="${build.extension.output}" srcdir="${build.tmp}" includes="**/*.java">
			<classpath refid="adito-agent.classpath"/>
		</javac>

		<jar jarfile="${build.dist}/agent-debug.jar" basedir="${build.extension.output}">
			<include name="org/apache/commons/logging/**/*.class"/>
			<include name="com/maverick/multiplex/**/*.class"/>
			<include name="com/adito/agent/client/**/*.class"/>
			<exclude name="com/adito/agent/client/gui/awt/**/*"/>
		</jar>
		
		<jar jarfile="${build.dist}/agent-awt-debug.jar" basedir="${build.extension.output}">
			<fileset dir="${build.extension.output}"> 
				<include name="com/maverick/multiplex/**/*.class"/>
				<include name="com/adito/agent/client/gui/awt/**/*.class"/>
			</fileset>
			<fileset dir="${adito-agent-awt.home}/src">
				<include name="images/**/*.gif" />
			</fileset>
		</jar>		

		<jar jarfile="${build.dist}/maverick-util-debug.jar" basedir="${build.extension.output}">
			<include name="com/maverick/util/**/*.class"/>
		</jar>

		<jar jarfile="${build.dist}/ui-debug.jar" basedir="${build.extension.output}">
			<include name="com/sshtools/ui/**/*.class"/>
			<include name="com/sshtools/ui/**/*.properties"/>
			<include name="com/sshtools/util/**/*.class"/>
		</jar>
		
		<java classname="codeswitcher.CodeSwitcher" fork="true">
			<arg value="${build.tmp}"/>
			<arg value="+DEBUG"/>
			<arg value="-MSJAVA"/>
			<arg value="-JAVA1"/>
			<arg value="+JAVA2"/>
			<arg value="-NETSCAPE"/>
			<arg value="#STRIP"/>
			<classpath>
				<pathelement path="${build-tools.home}/codeswitcher/codeswitcher.jar"/>
			</classpath>
		</java>
		<javac debug="${agent.build.debug}" source="${agent.build.source}" 
			target="${agent.build.target}" destdir="${build.extension.output}" 
			includes="**/swt/**/*.java"
			srcdir="${build.tmp}">
			<classpath>
				<fileset dir="${adito-agent-swt.home}/lib/win32">
					<include name="*.jar"/>
				</fileset>	
			</classpath>
			<classpath refid="adito-agent.classpath"/>
		</javac>		
		<!--
		<jar jarfile="${build.dist}/agent-swt-debug.jar" basedir="${build.extension.output}">
			<fileset dir="${build.extension.output}"> 
				<include name="com/adito/agent/client/gui/swt/**/*.class"/>
				<include name="images/*.png" />
				<include name="images/tray-*.gif" />
			</fileset>
			<fileset dir="${adito-agent-swt.home}/src">
				<include name="images/**/*.gif" />
				<include name="images/**/*.png" />
			</fileset>
		</jar>	
		-->
		<!-- Build the extension structure -->
<!--
		<mkdir dir="${build.extension}"/>
		<copy todir="${build.extension}">
			<fileset dir="extensions/${ant.project.name}">
				<include name="**/*"/>
				<exclude name="**/CVS/**/*"/>
			</fileset>
		</copy>
	    <copy failonerror="false" file="${build.dist}/launcher.cab" tofile="${build.extension}/launcher.cab" />
	    <copy todir="${build.extension}">
	        <fileset dir="lib">
	            <include name="*.jar" />
	            <include name="*.dll" />
	        </fileset>
	        <fileset dir="${build.dist}">
	            <include name="*.jar" />
	        </fileset>
			<fileset dir="${maverick-multiplex.home}/lib">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${maverick-ssl.home}/build/dist">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${maverick-ssl.home}/lib">
				<include name="*.jar"/>
			</fileset>
	    	<fileset dir="${build.dist}">
	            <include name="launcher*.jar" />
	        </fileset>
	        <fileset dir="${adito-agent-swt.home}/lib/linux">
	            <include name="*.so" />
	        </fileset>
	        <fileset dir="${adito-agent-swt.home}/lib/macosx">
	            <include name="*.jnilib" />
	        </fileset>
	        <fileset dir="${adito-agent-swt.home}/lib/win32">
	            <include name="*.dll" />
	        </fileset>
	    </copy>
		<copy file="${adito-agent-swt.home}/lib/linux/swt.jar"
			tofile="${build.extension}/swt-linux.jar"/>
		<copy file="${adito-agent-swt.home}/lib/win32/swt.jar"
			tofile="${build.extension}/swt-win32.jar"/>
		<copy file="${adito-agent-swt.home}/lib/macosx/swt.jar"
			tofile="${build.extension}/swt-macosx.jar"/>
-->
	</target>

	<target name="release" depends="build">
	
		<!-- Create the archive -->
		<mkdir dir="${build.release}"/>
		<zip destfile="${build.release}/${ant.project.name}.zip">
			<zipfileset dir="${build.extension}" prefix="${ant.project.name}">
				<include name="**/*"/>
			</zipfileset>
		</zip>
		
		<!-- Generate checksums -->
		<checksum>
			<fileset dir="${build.release}">
				<include name="*.zip"/>
			</fileset>
		</checksum>
	</target>
	
	<target name="clean">

		<delete>
			<fileset dir="${build.extension.output}"/>
			<fileset dir="${build.release}"/>
<!--			<fileset dir="${build.jars}"/> -->
			<fileset dir="${build.extension}"/>
			<fileset dir="${build.tmp}"/>
			<fileset dir="${build.dist}"/>
			<fileset dir="${build.test.output}" />
		</delete>

	</target>
	
	<!-- Compile the test  -->
	<target name="compile-test" depends="build">
		<mkdir dir="${build.test.output}" />
		<javac destdir="${build.test.output}" srcdir="${build.test}" 
			   includeantruntime="false" includes="**/*.java">
			<classpath>
				<pathelement path="${build.extension.output}"/>
				<fileset dir="${build-tools.home}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
		<copy todir="${build.test.output}">
			<fileset dir="${build.test}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>

	<!-- Define the Ant task for running JUnit -->

	<target name="test" depends="compile-test">
		<mkdir dir="${build.reports}"/>
		<mkdir dir="${build.reports}/xml"/>
		<junit printsummary="yes" fork="yes" failureproperty="junit.test.failure" dir="${adito.home}">
			<classpath>
				<pathelement path="${build.test.output}"/>
				<pathelement path="${build.extension.output}"/>
				<fileset dir="${build-tools.home}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<formatter type="xml"/>
			<batchtest fork="yes" todir="${build.reports}/xml">
				<fileset dir="${build.test.output}">
			        <include name="**/*Test*.class"/>
			        <exclude name="**/*Abstract*.class"/>
			        <exclude name="**/*$*.class"/>
				</fileset>
			</batchtest>
		</junit>
		<antcall target="test-report"/>
		<fail if="junit.test.failure" unless="run.all.tests" message="One or more JUnit tests failed, please consult the report for more information"/>
	</target>

	<target name="test-report" unless="run.all.tests">
		<junitreport todir="${build.reports}">
			<fileset dir="${build.reports}/xml">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${build.reports}/html"/>
		</junitreport>
	</target>


</project>
