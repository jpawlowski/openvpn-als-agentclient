<?xml version="1.0" encoding="UTF-8"?>
<project name="ui" default="build" basedir=".">

	<!-- First try module specific build.properties, then try
			 global ~/.3sp.build.properties -->

    <property file="build.properties"/>
    <property file="${user.home}/.3sp.build.properties"/>

    <!-- Set global properties for this build -->
	<property name="ui.home" value="../ui"/>
	<property name="ui.java1" value="true"/>
	<property name="build.dir" value="build"/>
	<property name="build.dist" value="${build.dir}/dist"/>
	<property name="build.src" value="./src"/>
	<property name="build.docs" value="${build.dir}/docs"/>
	<property name="build.release" value="${build.dir}/release"/>
	<property name="build.tmp" value="${build.dir}/tmp"/>
	<property name="build.tmp.java1.src" value="${build.tmp}/src-java1"/>
	<property name="build.tmp.java1.classes" value="${build.tmp}/classes-java1"/>
	<property name="build.tmp.java1.output" value="${build.tmp}/output-java1"/>
	<property name="build.tmp.java2.src" value="${build.tmp}/src-java2"/>
	<property name="build.tmp.java2.classes" value="${build.tmp}/classes-java2"/>
	<property name="build.tmp.java2.output" value="${build.tmp}/output-java2"/>
	<property name="build-tools.home" value="../build-tools"/>

	<property file="build.properties"/>

	<property name="ui.version"
			value="${version.major}.${version.minor}.${version.build}${version.tag}"/>
	<property name="ui.version.string"
			value="ui${version.tag}"/>

	<property name="antcontrib.lib" value="${build-tools.home}/ant/ant-contrib.jar"/>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${antcontrib.lib}" />
		</classpath>
	</taskdef>
	
   <!-- PREPROCESS THE SOURCE CODE -->
	<target name="setup">
		<mkdir dir="${build.tmp}"/>
		
		<mkdir dir="${build.tmp.java2.src}"/>
		<mkdir dir="${build.tmp.java2.output}"/>
		<copy todir="${build.tmp.java2.src}">
			<fileset dir="${build.src}"/>
		</copy>

		<java classname="codeswitcher.CodeSwitcher" fork="true">
			<arg value="${build.tmp.java2.src}"/>
			<arg value="-JAVA1"/>
			<arg value="+JAVA2"/>
			<classpath>
           		<pathelement path="../build-tools/codeswitcher/codeswitcher.jar"/>
         	</classpath>
       	</java>

		<if>
			<equals arg1="${ui.java1}" arg2="true"/>
			<then>
				<mkdir dir="${build.tmp.java1.src}"/>
				<mkdir dir="${build.tmp.java1.output}"/>
				<copy todir="${build.tmp.java1.src}">
					<fileset dir="${build.src}"/>
				</copy>
				<java classname="codeswitcher.CodeSwitcher" fork="true">
					<arg value="${build.tmp.java1.src}"/>
					<arg value="+JAVA1"/>
					<arg value="-JAVA1"/>
					<classpath>
		           		<pathelement path="../build-tools/codeswitcher/codeswitcher.jar"/>
		         	</classpath>
		       	</java>
		     </then>
		</if>


		<replace dir="${build.tmp}"
				token="/* HEADER */">
			<include name="**/*.java"/>
			<replacevalue><![CDATA[/*
 *  UI
 *
 *  Copyright (C) 2003-2006 3SP Ltd.
 *  Email: support@3sp.com
 */]]></replacevalue>
		</replace>
	</target>

	<target name="build" depends="clean">


		<!-- build J2ME distribution -->
		<antcall target="setup"/>
		<antcall target="compile"/>
		<antcall target="jar-ui"/>
	</target>

   <!-- COMPILE TARGET -->
	<target name="compile">
		<echo message="Creating directories"/>

       <!-- Create the output directories -->
		<mkdir dir="${build.tmp.java1.classes}"/>
		<mkdir dir="${build.tmp.java2.classes}"/>

       <!-- Compile the sources -->
		<if>
			<equals arg1="${ui.java1}" arg2="true"/>
			<then>
				<javac target="1.1" source="1.2" srcdir="${build.tmp.java1.src}" destdir="${build.tmp.java1.classes}" includes="**/*.java">
		       	</javac>
		     </then>
		</if>
		<javac target="1.2" source="1.2" srcdir="${build.tmp.java2.src}" destdir="${build.tmp.java2.classes}" includes="**/*.java">
       	</javac>

	</target>

    <!-- JAR BUILDING TARGET -->
	<target name="jar-ui">
		<mkdir dir="${build.dist}"/>

	  <!-- BUILD A SET OF UI JAR FILES -->

		<if>
			<equals arg1="${ui.java1}" arg2="true"/>
			<then>
				<jar jarfile="${build.dist}/ui-common-java1.jar" basedir="${build.tmp.java1.classes}">
					<fileset dir="${build.tmp.java1.src}">
						<include name="**/*.png"/>
					</fileset>
					<include name="com/sshtools/**/*.class"/>
					<include name="com/sshtools/**/*.properties"/>
					<exclude name="com/sshtools/ui/awt/**"/>
					<exclude name="com/sshtools/ui/swing/**"/>
					<manifest>
						<attribute name="Product-Version" value="${version.major}.${version.minor}.${version.build}${version.tag}"/>
					</manifest>
				</jar>
				<jar jarfile="${build.dist}/ui-awt-java1.jar" basedir="${build.tmp.java1.classes}">
					<include name="com/sshtools/ui/awt/**"/>
					<manifest>
						<attribute name="Product-Version" value="${version.major}.${version.minor}.${version.build}${version.tag}"/>
					</manifest>
				</jar>
				<jar jarfile="${build.dist}/ui-swing-java1.jar" basedir="${build.tmp.java1.classes}">
					<include name="com/sshtools/ui/swing/**"/>
					<manifest>
						<attribute name="Product-Version" value="${version.major}.${version.minor}.${version.build}${version.tag}"/>
					</manifest>
				</jar>
		     </then>
		</if>
			
		<jar jarfile="${build.dist}/ui-common-java2.jar" basedir="${build.tmp.java2.classes}">
			<fileset dir="${build.tmp.java2.src}">
				<include name="**/*.png"/>
			</fileset>
			<include name="com/sshtools/**/*.class"/>
			<include name="com/sshtools/**/*.properties"/>
			<exclude name="com/sshtools/ui/awt/**"/>
			<exclude name="com/sshtools/ui/swing/**"/>
			<manifest>
				<attribute name="Product-Version" value="${version.major}.${version.minor}.${version.build}${version.tag}"/>
			</manifest>
		</jar>
		<jar jarfile="${build.dist}/ui-awt-java2.jar" basedir="${build.tmp.java2.classes}">
			<include name="com/sshtools/ui/awt/**"/>
			<manifest>
				<attribute name="Product-Version" value="${version.major}.${version.minor}.${version.build}${version.tag}"/>
			</manifest>
		</jar>
		<jar jarfile="${build.dist}/ui-swing-java2.jar" basedir="${build.tmp.java2.classes}">
			<include name="com/sshtools/ui/swing/**"/>
			<manifest>
				<attribute name="Product-Version" value="${version.major}.${version.minor}.${version.build}${version.tag}"/>
			</manifest>
		</jar>
	</target>


    <!-- JAVADOCS TARGET -->
	<target name="javadoc" depends="build">

		<mkdir dir="${build.docs}"/>

		<javadoc packagenames="com.sshtools.ui.awt,com.sshtools.awt.util,com.sshtools.ui.swing,com.sshtools.ui.swing.util,com.sshtools.ui.swing.icons"
				sourcepath="${build.src}"
				defaultexcludes="yes"
				destdir="${build.docs}"
				author="true"
				version="true"
				use="true"
				windowtitle="UI API Documentation"
				notree="true">
			<doctitle><![CDATA[<h1>J2UI</h1><br>
    <p>The package provides a suite of basic user interface components and utilities for both
    Swing and AWT. These components are used througout 3SP's products to provide
    a consitent look and feel.</p>
    <p>A number of commonly used images and icons are also included.</p>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2003-2006 3SP LTD. All Rights Reserved.</i>]]></bottom>
		</javadoc>

	</target>

  <!-- Clean up all the generated files -->
	<target name="clean">
    <!-- delete the classpath -->
		<delete dir="${build.dist}"/>
		<delete dir="${build.docs}"/>
		<delete dir="${build.release}"/>
		<delete dir="${build.tmp}"/>
	</target>
</project>
