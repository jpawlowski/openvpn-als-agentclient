# Adito Category Information
adito.resourceBundle.name=Maverick HTTP (Base)
adito.resourceBundle.description=Message resources for the Maverick HTTP library base classes.
adito.resourceBundle.location=1

# Resources
ConnectMethod.httpConnect=HTTP CONNECT {0}:{1} returned [{2}]
DigestAuthentication.unsupportedQop=Unsupported qop in HTTP Digest authentication
HttpAuthenticatorFactory.created=Created {0} authenticator
HttpAuthenticatorFactory.notSupported=Preferred authentication scheme {0}  is not supported by host/proxy
HttpClient.authenticatorException=Got exception from HTTP authenticator instance
HttpClient.couldNotConnect=Could not connect after two attempts.
HttpClient.eof.attemptingAgain=EOFException. Attempting request {0}
HttpClient.eof.givingUp=EOFException. Giving up {0}
HttpClient.executing=Executing {0}
HttpClient.executingMethod=Executing method {0} on connection {1}
HttpClient.notValidProxyType={0}  is not a valid proxy type\!
HttpClient.promptingForCreds=Prompting user for credentials
HttpClient.requiresAuthType={0}  requires {1} authentication
HttpClient.setClientProxyHost=Set Maverick HTTP client proxy host to {0}
HttpClient.setClientProxyPort=Set Maverick HTTP client proxy port to {0}
HttpClient.settingAuthCredentials=Setting authentication credentials for {0}
HttpClient.settingUserCreds=Setting user credentials
HttpConnection.connectingTo=Connecting to {0}:{1}
HttpConnection.dead=Connection is dead
HttpConnection.eof=Connection is EOF
HttpConnection.failedToCreateMaverickDebugDirectory=Failed to create Maverick HTTP debug directory in {0}. No debug will occur
HttpConnection.invalidHttpStatusCode=Proxy returned HTTP status code {0}
HttpConnection.invalidProxyType=Invalid proxy type set\! type={0}
HttpConnection.proxyConnect=Connecting to {0}:{1} through {2} proxy {3}:{4}
HttpConnectionManager.creatingNewConnection=Creating new connection
HttpConnectionManager.releasedToPool=Released connection added back to pool [remaining={0}]
HttpConnectionManager.reusingConnection=Reusing connection [remaining={0}]
HttpConnectionManager.willNotReuse=Release connection will not be reused\!
HttpResponse.corruptField=HTTP Header encoutered a corrupt field: {0}
HttpResponse.failedToReadResponse=Failed to read HTTP response header. Received {0}
HttpResponse.headerCorrupt=The HTTP header is corrupt
HttpResponse.received100=Received 100-Continue header: {0}
HttpResponse.receivedHeader=Received header: {0}: {1}
HttpResponse.startLine=Received start line: {0}
HttpResponse.unexpectedEOF=Unexpected EOF in HTTP header
HttpResponse.unexpectedEOFDuringChunking=Unexpected EOF during chunked transfer encoded read
HttpResponse.unexpectedEOFInResponseExpected=Unexpected EOF in HTTP response, expected {0} more bytes
MultiStatusResponse.29=UTF8
MultiStatusResponse.failedToProcessMultistatusResponse=Failed to process multistatus response
MultiStatusResponse.failedToReadHTTPResponseHeader=Failed to read HTTP response header
MultiStatusResponse.invalidDavRootElement=Invalid DAV root element for multistatus response: 
MultiStatusResponse.noPropElementsInPropStat=No prop elements returned in propstat\!
MultiStatusResponse.noPropertyElements=Multistatus response returned no property elements\!
MultiStatusResponse.not207=Http status is not Multistatus/207
MultiStatusResponse.unexpectedHref=Expected href element in multistatus response\!
MultiStatusResponse.unexpectedStatusResponse=Expected status element in multistatus response\!
NTLMAuthentication.invalidState=Invalid authentication state in NTLM authentication
ParameterParser.challendMayNotBeNull=Challenge may not be null
ParameterParser.invalidChallenge=Invalid challenge: {0}
SocketWithLayeredTransport.failedToClose=Failed to invoke transport close
SocketWithLayeredTransport.failedToCreateLayeredSocket=Failed to create layered socket
SocketWithLayeredTransport.failedToLayerTransport=Failed to layer transport: {0}
UnsupportedAuthenticationException.notSupported=Authentication is not supported
URLDecoder.illegalHexCharacter=URLDecoder: Illegal hex characters in escape (%) pattern - 
URLDecoder.incompleteTrailingEscape=URLDecoder: Incomplete trailing escape (%) pattern
