# Adito Category Information
adito.resourceBundle.name=Maverick HTTP (SSL)
adito.resourceBundle.description=Message resources for the Maverick HTTP library SSL protocol classes.
adito.resourceBundle.location=1

# Resources
SSLHandshakeProtocol.processingType=Handshake protocol is processing type {0} with {1} bytes of message data
SSLHandshakeProtocol.receivedHELLO=Received HELLO request
SSLHandshakeProtocol.receivedServerHELLO=Received server HELLO message
SSLHandshakeProtocol.receivedUnexpectedServerHello=Server HELLO message received but not expected ({0})
SSLHandshakeProtocol.receivedServerCertificate=Received server certificate
SSLHandshakeProtocol.unexpectedCertificateMessageReceived=Certificate message received but not expected ({0})
SSLHandshakeProtocol.receivedUnsupportedServerKEX=Received server key exchange [Unsupported operation]
SSLHandshakeProtocol.kexNotSupported=We currently dont support server key exchange\!
SSLHandshakeProtocol.receivedUnsupportedClientCert=Received client certificate request [Unsupported operation]
SSLHandshakeProtocol.helloDone=Received server HELLO DONE
SSLTransport.remoteSideClosing=The remote side is closing the connection
SSLException.unexpectedMessage=Unexpected message
SSLException.protocolViolation=Protocol violation
SSLHandshakeProtocol.unexpectedServerHelloDone=Server HELLO DONE message received but not expected ({0})
SSLHandshakeProtocol.sendingNoCert=Sending no certificate alert
SSLException.unexpectedStatusError=Unexpected error status {0}
SSLHandshakeProtocol.receivedServerFinished=Received server FINISHED
SSLHandshakeProtocol.alreadyInProgress=Handshake cannot be started as a handshake operation is in progress
SSLHandshakeProtocol.starting=Starting SSL Handshake
SSLHandshakeProtocol.calculatingMasterSecret=Calculating master secret
SSLHandshakeProtocol.generatingPreMasterSecret=Generating pre-master secret
SSLHandshakeProtocol.generatingKeyData=Generating key data
SSLHandshakeProtocol.updatingHandshakeHashes=Updating handshake hashes
SSLTransport.initCompleteStartingAppProtocol=Initialization complete; starting application protocol
SSLHandshakeProtocol.completingHandshakeHashes=Completing handshake hashes
SSLHandshakeProtocol.masterSecret=Master secret is {0} and first byte is {1}
SSLException.decompressionFailure=Decompression failure
SSLHandshakeProtocol.failedToVerifyCertAgainstTruststore=Failed to verify certificate against trust store (This may not be an error)
SSLHandshakeProtocol.certInvalidOrUntrusted=The server certificate was either invalid or untrusted
SSLHandshakeProtocol.x509Cert=Server X509 Certificate...
SSLException.handshakeFailure=Handshake failure
SSLTransport.unexpectedAlert=Unexpected alert type {0} {1}
SSLException.unsupportedCert=Unsupported certificate
SSLHandshakeProtocol.x509Cert.subject=Subject DN: 
SSLTransport.processingFragmentOfType=Processing fragment of type {0}
SSLTransport.unexpecedSSLProtocolType=Unexpected SSL protocol type 
SSLTransport.changingOutputCipherSpec=Changing OutputStream cipher spec
SSLHandshakeProtocol.x509Cert.issuer=Issuer DN: 
SSLTransport.changingInputCipherSpec=Changing InputStream cipher spec
SSLHandshakeProtocol.sendingClientHello=Sending client HELLO
SSLException.remoteSideClosedConnection=The remote side has closed the connection
TrustedCACertStore.signatureAlgorithmNotSupported={0} signature algorithm is currently not supported
TrustedCACertStore.unsupportedPublicKeyInX509Cert=Unsupported public key in X509 certificate
TrustedCACertStore.errorGettingCertFromTrustStore=Error getting certificate from trust store
SSLTransport.initialising=Initializing SSL
SSLTransport.invalidMAC=Invalid MAC\!\!
SSLTransport.sending1Byte=Sending 1 byte of data
SSLTransport.bytesToSend={0} bytes of data to send
SSLException.certRevoked=Certificate revoked
SSLException.certExpired=Certificate expired
SSLException.certUnknown=Certificate unknown
SSLException.readTimeout=Read timeout
SSLTransport.sendingBlock=Sending block of {0} bytes
SSLException.badRecordMAC=Bad record MAC
CertificateStore.alreadyExists=Certificatev already exists in trust store\! 
CertificateStore.addingTrustedCA=Adding trusted CA cert {0}
CertificateStore.couldNotLocateTrustedCAResource=Could not locate trusted CA resource {0}  anywhere in the CLASSPATH.
SSLException.noCert=No certificate
SSLException.badCert=Bad certificate
